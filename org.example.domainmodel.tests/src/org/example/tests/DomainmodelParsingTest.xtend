/*
 * generated by Xtext 2.25.0
 */
package org.example.tests

import com.google.inject.Inject
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.extensions.InjectionExtension
import org.eclipse.xtext.testing.util.ParseHelper
import org.example.domainmodel.Domainmodel
import org.junit.jupiter.api.Assertions
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.^extension.ExtendWith

@ExtendWith(InjectionExtension)
@InjectWith(DomainmodelInjectorProvider)
class DomainmodelParsingTest {
	@Inject
	ParseHelper<Domainmodel> parseHelper
	
	@Test
	def void loadModel() {
		val result = parseHelper.parse('''
				datatype String
				
				entity Blog {
				  title: String
				  many posts: Post
				}
				
				entity HasAuthor {
				  author: String
				}
				
				entity Post extends HasAuthor {
				  title: String
				  content: String
				  many comments: Comment
				}
				
				entity Comment extends HasAuthor {
				  content: String
				}		
				''')
		Assertions.assertNotNull(result)
		val errors = result.eResource.errors
		Assertions.assertTrue(errors.isEmpty, '''Unexpected errors: «errors.join(", ")»''')
	}
}
