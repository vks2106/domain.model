/**
 * generated by Xtext 2.25.0
 */
package org.example.generator;

import com.google.common.collect.Iterators;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.xtext.generator.AbstractGenerator;
import org.eclipse.xtext.generator.IFileSystemAccess2;
import org.eclipse.xtext.generator.IGeneratorContext;
import org.eclipse.xtext.xbase.lib.Functions.Function1;
import org.eclipse.xtext.xbase.lib.IteratorExtensions;
import org.example.domainmodel.Domainmodel;
import org.example.domainmodel.Entity;

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
@SuppressWarnings("all")
public class DomainmodelGenerator extends AbstractGenerator {
  @Override
  public void doGenerate(final Resource resource, final IFileSystemAccess2 fsa, final IGeneratorContext context) {
    final Function1<Domainmodel, Class<Entity>> _function = (Domainmodel it) -> {
      return Entity.class;
    };
    String _join = IteratorExtensions.join(IteratorExtensions.<Domainmodel, Class<Entity>>map(Iterators.<Domainmodel>filter(resource.getAllContents(), Domainmodel.class), _function), ", ");
    String _plus = ("Domainmodel : " + _join);
    fsa.generateFile("domainmodel.txt", _plus);
  }
}
